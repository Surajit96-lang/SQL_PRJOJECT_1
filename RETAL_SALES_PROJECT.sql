DROP TABLE IF EXISTS RETAIL_SALES;
-- CREATE TABLE OF RETAIL SALES
CREATE TABLE RETAIL_SALES
		(
			transactions_id INT PRIMARY KEY,
			sale_date DATE,
			sale_time TIME,
			customer_id INT,
			gender VARCHAR(20),
			age INT,
			category VARCHAR(20),
			quantiy INT,
			price_per_unit FLOAT,
			cogs FLOAT,
			total_sale FLOAT
		);
SELECT * FROM RETAIL_SALES
LIMIT 10;

-- HOW MANY TOTAL RECORDS WE HAVE
SELECT COUNT(*) FROM RETAIL_SALES;

-- CHECKING NULL VALUES 
SELECT * FROM RETAIL_SALES
WHERE transactions_id IS NULL
	OR SALE_DATE IS NULL
	OR SALE_TIME IS NULL
	OR CUSTOMER_ID IS NULL
	OR GENDER IS NULL
	OR AGE IS NULL
	OR CATEGORY IS NULL
	OR QUANTIY IS NULL
	OR PRICE_PER_UNIT IS NULL
	OR COGS IS NULL
	OR TOTAL_SALE IS NULL;

-- FOR DELETE THE NULL VALUE 
DELETE FROM RETAIL_SALES
WHERE transactions_id IS NULL
	OR SALE_DATE IS NULL
	OR SALE_TIME IS NULL
	OR CUSTOMER_ID IS NULL
	OR GENDER IS NULL
	OR AGE IS NULL
	OR CATEGORY IS NULL
	OR QUANTIY IS NULL
	OR PRICE_PER_UNIT IS NULL
	OR COGS IS NULL
	OR TOTAL_SALE IS NULL;
	
-- AFTER DELETE THE NULL VALUE SHOW THE ALL TABLE
SELECT COUNT(*) FROM RETAIL_SALES;

-- DATA EXPLORATION --

-- HOW MANY TRANSACTION WE HAVE?
SELECT COUNT(TRANSACTIONS_ID) FROM RETAIL_SALES;

-- HOW MANY UNIUQUE CUSTOMERS WE HAVE?
SELECT COUNT(DISTINCT CUSTOMER_ID) FROM RETAIL_SALES;

-- HOW MANY UNIUQUE CATEGORY WE HAVE?
SELECT COUNT(DISTINCT CATEGORY) FROM RETAIL_SALES;
SELECT DISTINCT CATEGORY FROM RETAIL_SALES; -- UNIUQUE CATEGORY NAME

-- DATA ANALYSIS AND SOLVE YHE BUSINESS PROBLEMS

-- Q1:RETRIVE ALL COLUMNS FOR SALES MADE ON 2022-11-05
SELECT * FROM RETAIL_SALES
WHERE  SALE_DATE = '2022-11-05';

-- Q2:RETRIVE ALL TRANSACTION WHERE THE CATEGORY IS CLOTHING AND THE QUANTITY IS SOLD IS MORE THAN 2 IN THE MONTH OF NOV-2022
SELECT *FROM RETAIL_SALES
WHERE CATEGORY ='Clothing'
AND 
TO_CHAR(SALE_DATE,'YYYY-MM')='2022-11'
AND
QUANTIY>2
ORDER BY SALE_DATE DESC;

-- Q3:CALCULATE THE TOTAL SALES FOR EACH CATREGORY
SELECT 
CATEGORY,SUM(TOTAL_SALE) AS NET_SALE,
COUNT(*) AS TOTAL_ORDERS
FROM RETAIL_SALES
GROUP BY CATEGORY;

-- Q4:TO FIND THE AVERAGE AGE OF CUSTOMERS WHO PURCHASED ITEMS FROM THE BEAUTY CATEGORY
SELECT
ROUND(AVG(AGE),2) AS AVG_AGE
FROM RETAIL_SALES
WHERE CATEGORY='Beauty';

-- Q5:FIND THE ALL TRASACTION WHERE THE TOTAL SALES IS GRATER THAN 1000
SELECT TOTAL_SALE FROM RETAIL_SALES
WHERE TOTAL_SALE>=1000;

-- Q6:TO FIND THE TOTAL NUMBER OF TRANSACTION BY EACH GENDER IN EACH CATEGORY
SELECT
CATEGORY,GENDER,
COUNT(TRANSACTIONS_ID)
FROM RETAIL_SALES
GROUP BY CATEGORY,GENDER
ORDER BY CATEGORY;

-- Q7:TO FIND OUT THE AVERAGE SALE FOR EEACH MONTH.FIND OUT THE BEST SELLING MONTH IN EACH YEAR
SELECT *FROM 
(
	SELECT 
	    EXTRACT(YEAR FROM SALE_DATE) AS YEAR,
		EXTRACT(MONTH FROM SALE_DATE) AS MONTH,
		ROUND(AVG(TOTAL_SALE)) AS AVG_SALE,
		RANK() OVER (PARTITION BY EXTRACT(YEAR FROM SALE_DATE) ORDER BY ROUND(AVG(TOTAL_SALE)) DESC)
	FROM RETAIL_SALES
	GROUP BY YEAR,MONTH
) AS T1
WHERE RANK=1;

-- Q8:TO FIND OUT THE TOP 5 CUSTOMER BASED ON THE HIGHEST SALE
SELECT 
	CUSTOMER_ID,
	SUM(TOTAL_SALE) AS SALE
FROM RETAIL_SALES
GROUP BY CUSTOMER_ID
ORDER BY SALE DESC
LIMIT 5;

-- Q9:TO FIND THE NUMBER OF UNIQUE CUSTOMER WHO PURCHASED ITEM FOR EACH CATEGORY
SELECT 
CATEGORY,
COUNT(DISTINCT CUSTOMER_ID) AS UNIQUE_CUSTOMER
FROM RETAIL_SALES
GROUP BY CATEGORY;

-- Q10:CREATE THE SHIFT AND NUMBERS OF ORDERS (EX:- MORNING <=12,AFTERNOON BETWEEN 12 & 17 ,EVENING>17)
WITH HOURLY_SALE
AS
(
SELECT SALE_TIME,
	CASE 
		WHEN EXTRACT(HOUR FROM SALE_TIME)<12 THEN 'MORNING'
		WHEN  EXTRACT(HOUR FROM SALE_TIME) BETWEEN 12 AND 17 THEN 'AFTERNOON'
		ELSE 'EVENING' 
		END AS SHIFT
FROM RETAIL_SALES
)
SELECT SHIFT,
COUNT(*) TOTAL_ORDERS
FROM HOURLY_SALE
GROUP BY SHIFT;















